name: Deploy Full Stack App to EC2

on:
  push:
    branches:
      - main

env:
  # Frontend ENV
  VITE_BACKEND_HOST: ${{ secrets.VITE_BACKEND_HOST }}
  VITE_BACKEND_PORT: ${{ secrets.VITE_BACKEND_PORT }}
  VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
  VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
  VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
  VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
  VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
  VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}

  # Backend ENV
  PORT: ${{ secrets.PORT }}
  MONGO_URI: ${{ secrets.MONGO_URI }}
  FIREBASE_SERVICE_ACCOUNT_KEY_PATH: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY_PATH }}
  MAIL_USER: ${{ secrets.MAIL_USER }}
  MAIL_PASS: ${{ secrets.MAIL_PASS }}
  CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  LOGGER_PATH: ${{ secrets.LOGGER_PATH }}

jobs:
  deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install frontend dependencies
        working-directory: ./pwa
        run: npm ci

      - name: Create frontend .env
        working-directory: ./pwa
        run: |
          cat <<EOF > .env
          VITE_BACKEND_HOST=${VITE_BACKEND_HOST}
          VITE_BACKEND_PORT=${VITE_BACKEND_PORT}
          VITE_FIREBASE_API_KEY=${VITE_FIREBASE_API_KEY}
          VITE_FIREBASE_AUTH_DOMAIN=${VITE_FIREBASE_AUTH_DOMAIN}
          VITE_FIREBASE_PROJECT_ID=${VITE_FIREBASE_PROJECT_ID}
          VITE_FIREBASE_STORAGE_BUCKET=${VITE_FIREBASE_STORAGE_BUCKET}
          VITE_FIREBASE_MESSAGING_SENDER_ID=${VITE_FIREBASE_MESSAGING_SENDER_ID}
          VITE_FIREBASE_APP_ID=${VITE_FIREBASE_APP_ID}
          EOF

      - name: Build frontend
        working-directory: ./pwa
        run: npm run build

      - name: Upload full project to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./*"
          target: "/home/ubuntu/prod-deployment"
          port: 22
          overwrite: true

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22

          script: |
            echo "üîê Adding new manual SSH key"
            echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDD1C0edlUeGMkOwwNbSpwbhKL+/80ueomNWTRXDg2Yulk6OR6lhO6esVSUc3hmLBfHakvHp59r/+7FaKL64HhJfPHYTGVeQGkdPJGLXHI398GBXqI+7FP0MtwA0u4ZVKgnK1VwmdhmSQEXXyQ6YXh9SKdUsFUT+sTVgxaCJMD+0SFlOg+m8+moH3AUcTD4KbkFsaYcbZlIwIjtPQWTRuwIq359Tjvr7wmjxwr3bpLOg6dKzhtYYCcdS6bpMuNyL71H8eCVy9gsJ58S2EZeiiZnLpWFHFN/LqmWSt/yzmPTZUHwnfNX7nY/EALS74oS0xuJvQRFSGbH1EyvHKegVJUWFqJTqpyQ+kIZ1yhaC5Inf/8Es3/LoLbcwWzMJeDnSM0+F4CmaLOWU1aSiOD+IYZwGaMGXqhipL9e24zpNHD/FakUzya/4HGq4jY196cC/DyEDJ6ifirtKZvvHrMr62MVGZVvydQNcZPWiEBHhl2lKAcpOCPZpUNMSDaqLtNnDguDAcw1BqcIuDmzCycGC83mtVHRnwVHdlX6f+BImj/a1p/isZ5rAjlFCFNx0Mv68XrhR1RmmAd8q2oP4FfgQLe+hm78dxGyf9mhyj5FbVA1KgHIPglGDGQPsF/bkl70QOYoymHJ1S3XFndSzLRYf8zOBvYwrzgFKm0J1QkBj/iP4w== vidyamrit-recovery" >> ~/.ssh/authorized_keys

            cd /home/ubuntu/prod-deployment

            echo "üìÑ Writing backend .env"
            cat <<EOF > backend/.env
            PORT=${{ secrets.PORT }}
            MONGO_URI=${{ secrets.MONGO_URI }}
            FIREBASE_SERVICE_ACCOUNT_KEY_PATH=${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY_PATH }}
            MAIL_USER=${{ secrets.MAIL_USER }}
            MAIL_PASS=${{ secrets.MAIL_PASS }}
            CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}
            EOF

            echo "üîß Setting up NVM"
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"

            echo "üì¶ Installing backend dependencies"
            cd backend
            npm install

            echo "üî® Building backend"
            npm run build

            echo "üîë Linking Firebase key"
            ln -sf /home/ubuntu/secrets/firebaseServiceAccountKey.json ./firebaseServiceAccountKey.json

            echo "üöÄ Restarting backend with PM2 (serving dist/index.js)"
            pm2 restart backend-app || pm2 start dist/index.js --name backend-app

            echo "üåê Deploying frontend to Nginx"
            sudo rm -rf /var/www/html/*
            sudo cp -r /home/ubuntu/prod-deployment/pwa/dist/* /var/www/html/

            echo "‚úÖ Deployment complete"
